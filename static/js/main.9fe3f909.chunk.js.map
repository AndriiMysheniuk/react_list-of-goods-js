{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_NAME","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","reverseList","prepearedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","id","ReactDOM","render","document","getElementById"],"mappings":"iPAMMA,EAAkB,OAClBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BR,SAA0BC,EAA1B,GAA8D,IAA3BL,EAA0B,EAA1BA,UAAWM,EAAe,EAAfA,YACxCC,EAAc,YAAOF,GAqBzB,OAnBIL,GACFO,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQV,GACN,KAAKL,EACH,OAAOc,EAAME,cAAcD,GAE7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXN,IACFC,EAAiBA,EAAeM,WAG3BN,EAOcO,CACnBjB,EACA,CAAEG,YAAWM,YAAaJ,IAG5B,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,iBAAkB,CAAE,WAAYjB,IAAcL,IAEnDuB,QAAS,kBAAMjB,EAAaN,IAL9B,iCAUA,wBACEqB,KAAK,SACLD,UACEE,IAAG,oBACD,CAAE,WAAYjB,IAAcJ,IAEhCsB,QAAS,kBAAMjB,EAAaL,IAN9B,4BAWA,wBACEoB,KAAK,SACLD,UACEE,IAAG,oBACD,CAAE,YAAaf,IAEnBgB,QAAS,kBAAMf,GAAeD,IANhC,qBAWCF,GAAaE,EACZ,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAa,IACbE,GAAc,IALlB,mBAUE,QAGN,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,EAAKC,aCxGvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9fe3f909.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, { sortField, reverseList }) {\n  let prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseList) {\n    prepearedGoods = prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, reverseList: isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button is-info', { 'is-light': sortField !== SORT_FIELD_NAME })\n          }\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success',\n              { 'is-light': sortField !== SORT_FIELD_LENGTH })\n          }\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning',\n              { 'is-light': !isReversed })\n          }\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {sortField || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good.id}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}